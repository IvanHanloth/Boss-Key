name: Windows 7 Build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build-main-files:
    runs-on: windows-2019  # 使用Windows 2019运行器（更接近Windows 7环境）

    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 设置 Python 3.8 环境（更适合Windows 7）
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # 安装依赖和 Nuitka
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python --version
        shell: cmd

      # 进行编译（添加Windows 7兼容性选项）
      - name: Run Compile
        run: |
            python -m nuitka --windows-file-version=0.0.0.0 --windows-disable-console --windows-company-name="IvanHanloth" --show-progress --mingw64 --assume-yes-for-downloads --output-dir=out main/Boss-Key.py

      # 添加版本信息到可执行文件并重命名
      - name: Add version information and rename executable
        shell: pwsh
        run: |
          # 获取标签名作为版本号
          $tag = 'Win7-Build'
          # 定义新的文件名
          $newExeName = "Boss-Key-$tag-onefile.exe"
          
          # 重命名可执行文件
          Rename-Item "out/Boss-Key.exe" $newExeName

          # 压缩out/Boss-Key.dist/文件夹
          Compress-Archive -Path "out/Boss-Key.dist" -DestinationPath "out/Boss-Key-$tag-multifile.zip"

          ls out
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Win7-Build
          path: |
            out/Boss-Key.dist

#   deploy-test:
#     environment:
#       name: win7-buildup-test
#     runs-on: windows-2019
#     needs: build-main-files
#     steps:
#       - name: Download artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: Win7-Build
#           path: ./test

#       - name: Test Main Files
#         run: |
#           cd ./test
#           dir
#           ./Boss-Key.exe
        
  compile-to-installer:
    runs-on: windows-2019
    # needs: deploy-test
    needs: build-main-files
    steps:
    - name: Checkout code 
      uses: actions/checkout@v2
      
    - name: Clone Repo
      run: |
        cd ./.github/inno-script
        git clone https://github.com/IvanHanloth/innosetup-action.git
        cp -r innosetup-action/* .
        dir

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: Win7-Build
        path: ./.github/inno-script/software

    - name: Compile Installer
      run: |
        dir
        .\ISCC.exe /DMyAppVersion='Win7-Build' Boss-Key.iss
      working-directory: .github/inno-script

    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: Boss-Key-Win7-Installer
        path: .github/inno-script/output/Boss-Key-Win7-Build-Installer.exe
